CREATE OR REPLACE Function TRUNGBINHMON( 
    V_TENKHOI IN KETQUATHI.TENKHOI%TYPE,
    V_STT IN KETQUATHI.STT%TYPE
)
   RETURN NUMBER
AS  
    SOTHISINH INTEGER:=0;
    TONGDIEM NUMBER:=0;
    CURSOR KETQUA IS SELECT DIEMTHI,DIEMPHUCTRA FROM KETQUATHI WHERE TENKHOI=V_TENKHOI AND STT=V_STT;
    ROW_KETQUA KETQUA%ROWTYPE;
BEGIN
   OPEN KETQUA;
   LOOP
       FETCH KETQUA INTO ROW_KETQUA;
       EXIT WHEN KETQUA%NOTFOUND;
       IF ROW_KETQUA.DIEMPHUCTRA=-1
       THEN
            TONGDIEM := TONGDIEM + ROW_KETQUA.DIEMTHI;
            SOTHISINH := SOTHISINH+1;
       ELSE
            TONGDIEM := TONGDIEM + ROW_KETQUA.DIEMPHUCTRA;
            SOTHISINH := SOTHISINH+1;
       END IF;
            
   END LOOP;
   CLOSE KETQUA;
   RETURN TONGDIEM/SOTHISINH;
END;

CREATE OR REPLACE Function DAUNGUYENVONG1(
    V_MATRUONG IN KETQUATHI.MATRUONG%TYPE,
    V_MANGANH IN KETQUATHI.MANGANH%TYPE,
    V_TENKHOI IN KETQUATHI.TENKHOI%TYPE,
    V_NV1DK IN NUMBER
)
   RETURN INT
AS  
    DAU INT:=0;
    CURSOR THISINHXET IS SELECT DISTINCT ID AS THISINHID,SBD FROM KETQUATHI 
                                WHERE MATRUONG=V_MATRUONG AND MANGANH=V_MANGANH AND TENKHOI=V_TENKHOI;
    ROW_THISINH THISINHXET%ROWTYPE;          
    ISNULL INT:=0;
    DIEM NUMBER:=0;
BEGIN
   OPEN THISINHXET;
   LOOP
       FETCH THISINHXET INTO ROW_THISINH;
       EXIT WHEN THISINHXET%NOTFOUND;
          SELECT COUNT(MATRUONG) INTO ISNULL  FROM KETQUATHI WHERE  MATRUONG=V_MATRUONG AND MANGANH=V_MANGANH AND TENKHOI=V_TENKHOI AND ID =ROW_THISINH.THISINHID AND DIEMTHI =0 AND SBD=ROW_THISINH.SBD;
          SELECT TONGDIEM INTO DIEM FROM HSTHISINHTHI WHERE MATRUONG=V_MATRUONG AND MANGANH=V_MANGANH AND TENKHOI=V_TENKHOI AND ID =ROW_THISINH.THISINHID AND SBD=ROW_THISINH.SBD;
          IF ISNULL = 0 THEN
             IF DIEM>V_NV1DK THEN
             DAU := DAU+1;
             END IF;
          END IF; 
   END LOOP;
   CLOSE THISINHXET;
   RETURN DAU;
END;

CREATE OR REPLACE TRIGGER CAPNHATPHONGTHI
AFTER INSERT ON HSTHISINHTHI
FOR EACH ROW
BEGIN
  UPDATE PHONGTHI
      SET PHONGTHI.TONGSOTHISINH = PHONGTHI.TONGSOTHISINH+1
      WHERE PHONGTHI.SOPHONG= :NEW.SOPHONG;
END CAPNHATPHONGTHI;

CREATE OR REPLACE TRIGGER CAPNHATSOTHISINHCOMAT
AFTER INSERT ON THISINHVANG
FOR EACH ROW
DECLARE
  CURSOR DT IS SELECT MADIADIEM,SOPHONG,:NEW.MABUOITHI AS MABUOITHI FROM HSTHISINHTHI WHERE ID= :NEW.ID AND 
            MATRUONG = :NEW.MATRUONG AND
            MANGANH = :NEW.MANGANH AND
            TENKHOI = :NEW.TENKHOI AND
            SBD = :NEW.SBD;
  R_DT  DT%ROWTYPE;
BEGIN
  OPEN DT;
   LOOP
       FETCH DT INTO R_DT;
       EXIT WHEN DT%NOTFOUND;
       UPDATE SOTHISINHCOMAT 
          SET SOTHISINHCOMAT = (SELECT TONGSOTHISINH  FROM PHONGTHI WHERE MADIADIEM = R_DT.MADIADIEM AND SOPHONG = R_DT.SOPHONG AND MABUOITHI = R_DT.MABUOITHI)-1
          WHERE MADIADIEM = R_DT.MADIADIEM AND SOPHONG = R_DT.SOPHONG AND MABUOITHI = R_DT.MABUOITHI;
   END LOOP;
   CLOSE DT;
END CAPNHATSOTHISINHCOMAT;

create or replace TRIGGER CAPNHATDIEMDUKIEN
AFTER UPDATE OF DIEMPHUCTRA  ON KETQUATHI
FOR EACH ROW
BEGIN
  IF :NEW.DIEMTHI>:NEW.DIEMPHUCTRA THEN
    UPDATE HSTHISINHTHI 
            SET TONGDIEM = TONGDIEM+:NEW.DIEMTHI-:NEW.DIEMPHUCTRA
            WHERE ID = :NEW.ID AND 
                  MATRUONG = :NEW.MATRUONG AND
                  MANGANH = :NEW.MANGANH AND
                  TENKHOI = :NEW.TENKHOI AND
                  SBD = :NEW.SBD;
  ELSE
    UPDATE HSTHISINHTHI 
            SET TONGDIEM = TONGDIEM-:NEW.DIEMTHI+:NEW.DIEMPHUCTRA
            WHERE ID = :NEW.ID AND 
                  MATRUONG = :NEW.MATRUONG AND
                  MANGANH = :NEW.MANGANH AND
                  TENKHOI = :NEW.TENKHOI AND
                  SBD = :NEW.SBD;
  END IF;
END CAPNHATDIEMDUKIEN;

CREATE OR REPLACE TRIGGER KIEMTRANV1
BEFORE INSERT ON THISINHNGUYENVONG
FOR EACH ROW
DECLARE
    CURSOR DT IS SELECT * FROM THONGTINTUYENSINH WHERE MATRUONG=:NEW.MATRUONG AND MANGANH=:NEW.MANGANH AND TENKHOI=:NEW.TENKHOI;
    R_DT DT%ROWTYPE;
BEGIN
    IF inserting THEN
         OPEN DT;
         LOOP
             FETCH DT INTO R_DT;
             IF DT%NOTFOUND THEN
                RAISE_APPLICATION_ERROR (-20500, 'KHONG CO DU LIEU');
             END IF ;
             EXIT WHEN DT%NOTFOUND;
         CLOSE DT;    
         END LOOP; 
    END IF;
END KIEMTRANV1;

CREATE OR REPLACE TRIGGER DANGKYNV2_3
BEFORE INSERT ON THISINHNGUYENVONG
FOR EACH ROW
DECLARE
    CURSOR DT IS SELECT TENKHOI FROM THONGTINTUYENSINH WHERE MATRUONG=:NEW.MATRUONG2 AND MANGANH=:NEW.MANGANH2;
    R_DT DT%ROWTYPE;
    v_User_exp Exception;
BEGIN
    IF inserting THEN
         IF :NEW.MATRUONG=:NEW.MATRUONG2 THEN
              RAISE v_User_exp;
         ELSE IF :NEW.MANGANH=:NEW.MANGANH2 THEN
                  RAISE v_User_exp;
                  ELSE IF :NEW.TENKHOI NOT IN (SELECT TENKHOI FROM THONGTINTUYENSINH WHERE MATRUONG = :NEW.MATRUONG2 AND MANGANH = :NEW.MANGANH2) THEN
                          RAISE v_User_exp;
                      END IF;
              END IF;
         END IF;
    END IF;
EXCEPTION 
    WHEN v_User_exp THEN 
            p_Error := 'Lỗi: Phần trăm nhỏ hơn 0'; 
            RETURN; 
    WHEN others THEN 
            p_Error := 'Lỗi: ' || SQLERRM;
            RETURN;
END DANGKYNV2_3;

